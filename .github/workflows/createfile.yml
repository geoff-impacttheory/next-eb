name: Create file

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    # Elastic Beanstalk CLI version
    - name: Get EB CLI version
      run: |
        python -m pip install --upgrade pip
        pip install awsebcli --upgrade
        eb --version

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    # Create the Elastic Beanstalk application
    - name: Create EBS application
      run: |
        eb init -p docker --region us-east-1
        # eb printenv Nextdockerpoc-env-staging | grep NEXT_PUBLIC_API_URL | awk '{print $3}' > hw.txt
        export var_one=$(eb printenv Nextdockerpoc-env-staging | grep NEXT_PUBLIC_API_URL | awk '{print $3}')
        bash ./scripts/replace_env.sh ${var_one}
        echo ${var_one}

    - name: Create file
      run: |
        echo First        > other.txt
        echo Second Line >> other.txt
        echo Third       >> other.txt


    - name: Show file content
      run: |
        pwd
        ls -la
        cat other.txt
        echo ${var_one}


    - name: Create directory and create file in homedir
      run: |
        ls -la ~/
        mkdir ~/.zorg
        echo First        > ~/.zorg/home.txt
        echo Second Line >> ~/.zorg/home.txt
        echo Third       >> ~/.zorg/home.txt
        ls -la ~/.zorg/

    - name: Show more file content
      run: |
        ls -la ~/
        cat ~/.zorg/home.txt

    # - name: Add environment variables to Dockerfile
    #   run: |
    #     bash scripts/replace_env.sh ${var_one}
