   
name: elb deployment

on:
  push:
    branches: [ master ]
  # pull_request:
  #   branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v2

    # Elastic Beanstalk CLI version
    - name: Get EB CLI version
      run: |
        python -m pip install --upgrade pip
        pip install awsebcli --upgrade
        eb --version

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    # Create the Elastic Beanstalk application
    - name: Create EBS application
      run: |
        eb init -p docker --region us-east-1
        # eb printenv Nextdockerpoc-env-staging | grep NEXT_PUBLIC_API_URL | awk '{print $3}' > hw.txt
        export var_one=$(eb printenv Nextdockerpoc-env-staging | grep NEXT_PUBLIC_API_URL | awk '{print $3}')
        echo ${var_one}
        bash ./scripts/replace_env.sh ${var_one}

        # eb use Nextdockerpoc-env-staging
        git config user.email "geoff@impacttheory.com"
        git config user.name "geoff@impacttheory.com"
        git add Dockerfile
        git commit -m "Automated: Update Dockerfile environment variables"
        git push
        eb deploy Nextdockerpoc-env-staging

        # (eb use Nextdockerpoc-env-staging && eb status Nextdockerpoc-env-staging && eb deploy) || eb create Nextdockerpoc-env-staging
