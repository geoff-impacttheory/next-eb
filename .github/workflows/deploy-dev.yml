   
name: elb deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

    # Elastic Beanstalk CLI version
    - name: Get EB CLI version
      run: |
        python -m pip install --upgrade pip
        pip install awsebcli --upgrade
        eb --version

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: us-east-1

    # Create the Elastic Beanstalk application
    - name: Create EBS application
      run: |
        eb init -p Docker running on 64bit Amazon Linux 2 --region us-east-1

    # Deploy to (or Create) the Elastic Beanstalk environment
    - name: Create test environment & deploy
      run: |
        (eb use Nextdockerpoc-env && eb status Nextdockerpoc-env && eb deploy) || eb create Nextdockerpoc-env


      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: "14"

      # - name: Generate build number
      #   id: buildnumber
      #   uses: einaregilsson/build-number@v3
      #   with:
      #     token: ${{secrets.github_token}} 

      # - name: Generate deployment package
      #   run: npm run next-install && npm run generate-zip

      # - name: Get timestamp
      #   uses: gerred/actions/current-time@master
      #   id: current-time

      # - name: Run string replace
      #   uses: frabert/replace-string-action@master
      #   id: format-time
      #   with:
      #     pattern: '[:\.]+'
      #     string: "${{ steps.current-time.outputs.time }}"
      #     replace-with: '-'
      #     flags: 'g'

      # - name: Deploy to EB
      #   uses: einaregilsson/beanstalk-deploy@v18
      #   with:
      #     aws_access_key: ${{secrets.AWS_ACCESS_KEY}}
      #     aws_secret_key: ${{secrets.AWS_SECRET_KEY}}
      #     application_name: "crm-admin-portal-dev"
      #     environment_name: "Crmadminportaldev-env-1"
      #     region: "us-east-1"
      #     version_label: "crm-admin-portal-dev-${{ steps.format-time.outputs.replaced }}"
      #     deployment_package: deploy.zip